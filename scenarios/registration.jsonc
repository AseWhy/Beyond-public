{
    "name": "Регистрация",
    "id": "registration",
    "use_state": true,
    "use_character": false,
    "import": ["map.lib", "origin.lib"],
    "preset": {
        "sex": null,
        "origin": null,
        "sity": null,
        "name": null
    },
    "condition": "user.registered = false",
    "entries": [
        { // Проверяем начальный алиас, и чтобы заголовок команды был регистрация
            "type": "excecute",
            "break_on": true,
            "condition": "command.header != 'регистрация'",
            "entries": [
                { 
                    "type": "write",
                    "break_on": true,
                    "message": "Приветствую, кажется вы не зарегистрированы. Напишите {> command.prefix}регистрация, для регистрации в системе.",
                    "condition": "state.state = 0"
                },
                { 
                    "type": "write",
                    "message": "Вы долго стоите и не входите в кабинку регистрации. Очередь позади вас начинает ворчать.",
                    "condition": "state.state != 0"
                }
            ]
        },
        {
            "type": "excecute",
            "condition": "state.state = 0",
            "entries": [
                {
                    "type": "write",
                    "auto_typing": true,
                    "message": "Прошло несколько лет с того момента, как многие начали замечать крайне странные изменения погоды в вашем городе. Всё начиналось несерьёзно: средняя годовая температура месяц за месяцем уменьшалась и лишь кучка учёных пыталась наводить панику, заявляя о глобальном похолодании. Ну глупость же несусветная, верно?.. Как оказалось - нет. Всё случилось неожиданно. Очередная зима наступила слишком рано. ",
                    "condition": "true"
                },
                {
                    "type": "write",
                    "auto_typing": true,
                    "message": "Посевы не взошли, животные начали умирать. Уже в ноябре погода встретила обитателей температурой ниже сорока градусов. Снег выпал слоем в несколько метров и в итоге условия жизни снизились до уровня угрожающего жизни. Ни провидцы, ни учёные не давали каких-либо хороших прогнозов. По итогу региональным управлением было принято решение о немедленной эвакуации поселения, в том числе и вас.",
                    "condition": "true"
                }
            ]
        },
        {
            "type": "write",
            "auto_typing": true,
            "message": "Уже несколько дней вы находитесь в повозке, за окном метель. Стук колёс слился с голосом матери, которая успокаивает ребёнка; множество молитв, которые питают страх перед неизвестностью. Всё стало будто белым шумом. Даже сопровождение военными силами не внушает спокойствия. Наконец вереница беженцев прекратила своё движение. Вам приказали выйти. Вы один из первых в рядах. Солдат приказывает вам пройти за ним. Вас заводят в какую-то наспех сколоченную палатку, где вы видите чиновника в шинели. Вы протягиваете ему связку бумаг.",
            "break_on": true, // Прерываем перебор сценариев на этом
            "keyboard": [
                {
                    "title": "Мужчина",
                    "color": "BLUE",
                    "payload": {"header": "регистрация", "data": ["Мужчина"]}
                },
                {
                    "title": "Женщина",
                    "color": "RED",
                    "payload": {"header": "регистрация", "data": ["Женщина"]}
                }
            ],
            "state": 1, // Прибавляю стадию на один, если выполнено
            "condition": "state.state = 0"
        },
        // Проверочное вхождение, если пользователь ввел свою бурду, вместо того чтобы нажать на кнопку оно сработает
        {
            "type": "write",
            "message": "Вы что-то пробормотали себе под нос. Чиновник попросил отвечать на вопросы чётко и разборчиво",
            "keyboard": [
                {
                    "title": "Мужчина",
                    "color": "BLUE",
                    "payload": {"header": "регистрация", "data": ["Мужчина"]}
                },
                {
                    "title": "Женщина",
                    "color": "RED",
                    "payload": {"header": "регистрация", "data": ["Женщина"]}
                }
            ],
            "break_on": true, // Прерываем перебор сценариев на этом
            "condition": "state.state = 1 & command.arg[0] != 'Мужчина' & command.arg[0] != 'Женщина'"
        },
        {
            "type": "save",
            "entries": { 
                "sex": "command.arg[0] = 'Мужчина' ? 'Male' : 'Female'" // Устанавливаю пол в соответсвии с аргументом 0
            },
            "condition": "state.state = 1"
        },
        {
            "type": "write",
            "break_on": true, // Прерываем перебор сценариев на этом
            "auto_typing": true,
            "prepare": "set allow_origin = origin.getDefaultsOriginList();",
            "message": [
                "*Открыть сумку с бумагами*\n",
                "Сейчас нужно выбрать происхождение, для этого введите",
                "!регистрация (и вот тут название происхождения которое вы выбрали)\n",
                "Например: !регистрация дворянин\n",
                "Доступные происхождения",
                "{> strings.join(allow_origin, '> &', '\n')}"
            ],
            "state": 1,
            "keyboard": "keyboard.createKeyboard('регистрация', allow_origin, 'GREEN')",
            "condition": "state.state = 1"
        }, // Проверочное вхождение, если пользователь ввел свою бурду, вместо того чтобы нажать на кнопку оно сработает
        {
            "type": "excecute",
            "condition": "state.state = 2",
            "prepare": "set allow_origin = origin.getDefaultsOriginList();",
            "entries": [
                {
                    "type": "write",
                    "message": [
                        "Вы что-то пробормотали себе под нос. Чиновник попросил отвечать на вопросы чётко и разборчиво\n",
                        "Сейчас нужно выбрать происхождение, для этого введите",
                        "!регистрация (и вот тут название происхождения которое вы выбрали)\n",
                        "Например: !регистрация дворянин\n",
                        "Доступные происхождения",
                        "{> strings.join(allow_origin, '> &', '\n')}"
                    ],
                    "break_on": true, // Прерываем перебор сценариев на этом
                    "keyboard": "keyboard.createKeyboard('регистрация', allow_origin, 'GREEN')",
                    "condition": "origin.getOriginIdByName(command.arg) = null"
                },
                {
                    "type": "save",
                    "entries": { 
                        "origin": "origin.getOriginIdByName(command.arg)" // Устанавливаю происхождение в соответсвии с аргументом 0
                    },
                    "condition": "true"
                },
                { // Сообщения для классов
                    "type": "write",
                    "auto_typing": true,
                    "message": [
                        "Чиновник взял бумаги, которые вы ему протянули. Тот лениво в них копался и изредка заглядывал в лежащую рядом книжку. {",
                        "> state.data.origin = 'peasant' ? 'Зевая, он ещё минут пять копался в бумагах до тех пор, пока вы «настоятельно» не потребовали разъяснить задержку.\n\n— Эй, свинья, ну-ка не мешай мне работать, или военные научат тебя вежливости! Забирай свои бумаги и проваливай с глаз моих! Прочь! — с некоторым раздражением вы берёте документы и, бросив злобный взгляд, покидаете эту палатку, следуя за военным.' : ''",
                        "> state.data.origin = 'thief' ? 'Когда вам вернули документы, на вас бросили презрительный взгляд, а сопровождающий процедил сквозь зубы:\n\n— Падаль.\n\nВы промолчали и прошли за военным.' : ''",
                        "> state.data.origin = 'guard' ? 'Вы простояли по стойке смирно несколько минут, прежде чем вам вернули бумаги. Вы отдали честь и прошли следом за военным.' : ''",
                        "> state.data.origin = 'adventurer' ? 'Вы огляделись. В округе нет никого и ничего что можно было бы убить и продать. Через несколько минут вам вернули бумаги и вы покинули палатку учёта.' : ''",
                        "> state.data.origin = 'hereditary_merchant' ? 'Чтобы поторопить его, вы протянули ему мешок монет в двадцать банов. Служащий бросил на вас взгляд и, схватив мешочек, спрятал его в карман шинели.\n\n— С вами очень приятно иметь дело, уважаемый. Сразу видно, что вы умелый торговец. Берите документы и желаю вам приятной дороги!\n\nВы берёте бумаги и медленно покидаете палатку, следуя за охранником' : ''",
                        "> state.data.origin = 'astrologer' ? 'Вы даже сами не поняли сколько простояли, когда служащий наконец соизволил вам отдать бумаги.\n\n - Как вы её называете? Погодная а-но-ма-ли-я? Надеюсь что это не произойдёт в остальных городах материка.\n\nВы пожали плечами и прошли за военным.' : ''",
                        "> state.data.origin = 'nobleman' ? 'Буквально через минуту чиновник поднял на вас голову.\n\n— Дворянская семья? Не думал, что я встретил бы подобных персон в пункте сбора-эвакуации. Поразительно, — служащий заметно растормошился и уже через минуту вам вернули документы и максимально любезно попросили пройти за военным.' : ''",
                        "> state.data.origin = 'salter' ? 'Чиновник просмотрел бумаги и, прочитав документы полностью сказал:\n\n— Да, в других условиях мы бы зарезали свинью и накрыли на стол. Печальная обстановка. Доброго пути.\n\nВы согласились и прошли за военным.' : ''",
                        "> state.data.origin = 'patrician' ? 'Нескольно минут вы стояли перед чиновником. Он посмотрел на вас, его взгляд упал на дорогие меха, в которые вы были одеты.\n\n— Знатный человек? Не смею вас задерживать.\n\nВас попросили пройти за военным.' : ''",
                        "> state.data.origin = 'herbalist' ? 'Чиновник листал документы несколько минут, после чего почувствовал странный запах трав, идущий от вас. Он не стал задавать вопросов, поставил печать и попросил вас уйти.' : ''",
                        "> state.data.origin = 'smith' ? 'По сравнению с вами чиновник выглядел просто крохотным. Он смотрел на вас снизу вверх, сверяя документы, боязливо протянул документы и вежливо попросил пройти за стражником.' : ''",
                        "> state.data.origin = 'gravedigger' ? 'Вы очень устали. Последняя неделя была полна работы для вас. Вы даже не заметили как чиновник отдал вам документы\n\n— Эй, ты что, спишь? Забирай свои бумаги и уходи\n\n Вы взяли документы и прошли за военным.' : ''",
                        "> state.data.origin = 'brat' ? 'Через пару минут чиновник презрительно посмотрел на вас и кинул ваши документы на стол\n\n— Забирай свои бумажки и проваливай\n\n Вы забрали холодные листы бумаги и прошли за военным.' : ''}"
                    ],
                    "condition": "true"
                }
            ]
        },
        {
            "type": "write",
            "auto_typing": true,
            "message": "Вас сопроводили до сарая, который стоял в центре всего импровизированного лагеря. По сравнению со всеми остальными постройками - эта выглядела самой качественной. На двери наспех собранного сарая красовалась надпись: «распределительный пункт». Вы вошли внутрь, где вас встретил пожилой человек в жилетке. Тот попросил вас представиться и присесть.?!\n\n Введи {> command.prefix}регистрация (и вот тут имя вашего персонажа, в любом регистре, на Русском и Английском языках. Максимальная длинна 32 символа.)\n\nНапример !регистрация Mobiluks",
            "state": 1,
            "condition": "state.state = 2"
        },
        {
            "type": "excecute",
            "condition": "state.state = 3", // Выбранная провинция граничит с провинцией персонажа
            "prepare": "set name = strings.join(command.arg, null, ' ');",
            "entries": [
                {
                    "type": "write",
                    "message": "Вы что-то пробормотали себе под нос. Чиновник попросил отвечать на вопросы чётко и разборчиво. Введи {> command.prefix}регистрация (и вот тут имя вашего персонажа, в любом регистре, на Русском и Английском языках. Максимальная длинна 32 символа.)",
                    "break_on": true,
                    "condition": "regexp.test('^[aA-zZ0-9аА-яЯ ]{1,32}$', null, name) = false"
                },
                {
                    "type": "write",
                    "auto_typing": true,
                    "message": "Старик пожал вам руку и вы прошли в маленький кабинет, где вам предложили снять верхнюю одежду и присесть. Выполнив это, перед вами развернули карту страны и указали жестом на красные точки.",
                    "condition": "true"
                },
                {
                    "type": "write",
                    "auto_typing": true,
                    "message": "— Знаете, чинуши сверху мне выдали списки и квоту, по которым я должен распределить людей в другие поселения. Вы пришли достаточно рано, потому городов, готовых принять беженцев сейчас достаточно. Что бы вы ни выбрали - мне без разницы. Вы можете выбрать крупный город или маленькое захолустье. Выбирайте с умом, ведь это будет вашим новым домом.",
                    "condition": "true"
                },
                {
                    "type": "write",
                    "auto_typing": true,
                    "message": "Старик уселся за стол, зажигая трубку и, устало уставившись в окно, будто бы смотря куда-то вдаль, наблюдал за снегопадом, потягивая дым.",
                    "condition": "true"
                },
                {
                    "type": "save",
                    "entries": { 
                        "name": "name" // Устанавливаю имя в соответсвии с параметром 0
                    },
                    "condition": "true"
                }
            ]
        },
        {
            "type": "write",
            "auto_typing": true,
            "message": [
                "Вы взяли анкету с городами. Осмотрев список вы наконец приняли решение...",
                "Список доступных городов: ",
                "=========================",
                "{> map.getStartedListEntryes('\n')}",
                "=========================",
                "Введите: !регистрация (и тут Название Города, название писать так-же как в списке.)",
                "Пример: !регистрация Сертия"
            ],
            "break_on": true, // Прерываем перебор сценариев на этом
            "state": 1,
            "condition": "state.state = 3"
        },
        {
            "type": "excecute",
            "condition": "state.state = 4", // Выбранная провинция граничит с провинцией персонажа
            "entries": [
                {
                    "type": "write",
                    "message": [
                        "Вы что-то пробормотали себе под нос. Чиновник попросил отвечать на вопросы чётко и разборчиво.",
                        "Список доступных городов: ",
                        "=========================",
                        "{> map.getStartedListEntryes('\n')}",
                        "=========================",
                        "Введите: !регистрация (и тут Название Города, название писать так-же как в списке.)",
                        "Пример: !регистрация Сертия"
                    ],
                    "break_on": true, // Прерываем перебор сценариев на этом
                    "condition": "map.isStartedSity(command.arg) = false"
                },
                {
                    "type": "save",
                    "entries": { 
                        "sity": "map.getIdentByName('sity', command.arg)" // Устанавливаю город
                    },
                    "condition": "true"
                },
                { // Выполняем запрос к бд
                    "type": "query",
                    "query": "{> \"INSERT INTO `characters` (`map`, `sex`, `name`, `origin`, `inventory`, `country`, `owner`, `updated`) VALUES ('\" + map.getMapCharacterPathBy('sity', state.data.sity) + \"', b'\" + (state.data.sex = 'Male' ? 0 : 1) + \"', '\" + state.data.name + \"', '\" + state.data.origin + \"', NULL, NULL, '\" + user.id + \"', CURRENT_TIMESTAMP)\"}",
                    "condition": "true"
                },
                { // Выполняем запрос к бд, ставлю статус регистрации на true
                    "type": "query",
                    "query": "{> \"UPDATE `users` SET `registered` = TRUE WHERE `id` LIKE '\" + user.id + \"'\"}",
                    "condition": "true"
                },
                {
                    "type": "write",
                    "auto_typing": true,
                    "message": "Вы осмотрели карту и, недолго думая, вписали понравившееся вам поселение. Старик сел в кресло, и начал изучать анкету, которую вы заполнили. Около усталый взгляд бегал по строчкам, пока не дошёл до графы города.",
                    "condition": "true"
                },
                {
                    "type": "write",
                    "auto_typing": true,
                    "message": "Интересный выбор - сказал старик.",
                    "condition": "true"
                },
                {
                    "type": "write",
                    "auto_typing": true,
                    "message": "Старик протянул руку к папке, вытащил оттуда лист бумаги, что-то подписал и шлёпнул штамп, после чего вручил документ вам. Это был приказ на эвакуацию. Вы пожали руку распределителя и молча вышли из кабинета. На улице вы подошли к стражнику, продемонстрировали бумагу, после чего вас направили в сторону другой вереницы повозок. Через час вы уже подъезжали к воротам города.",
                    "condition": "true"
                },
                {
                    "type": "write",
                    "message": [
                        "[СИСТЕМА]\n",
                        "Регистрация завершена! Теперь у вас есть персонаж.",
                        "Для просмотра информации по командам введите {> command.prefix}помощь\n",
                        "Информация о персонаже",
                        "Происхождение: {> origin.getOriginParameter(state.data.origin, 'name')}",
                        "Город: {> map.getNameByIdent('sity', state.data.sity)}",
                        "Имя: {> state.data.name}",
                        "Пол: {> state.data.sex = 'Male' ? 'Мужчина' : 'Женщина'}"
                    ],
                    "condition": "true"
                },
                { // Завершаем сценарий
                    "type": "scenario",
                    "order": "end",
                    "condition": "true"
                }
            ]
        }
    ]
}